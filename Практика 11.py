# –í–æ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞–Ω–∏–π –ø–æ Python, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∫–ª–∞—Å—Å–∞–º–∏ –∏ –û–û–ü, —Ä–∞–∑–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:  

# ### **1. –ë–∞–∑–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è**  
# 1. **–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞**  
#    - –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å `Person` —Å –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏ `name` (–∏–º—è) –∏ `age` (–≤–æ–∑—Ä–∞—Å—Ç).  
#    - –î–æ–±–∞–≤—å –º–µ—Ç–æ–¥ `introduce()`, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç: `"–ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç [name] –∏ –º–Ω–µ [age] –ª–µ—Ç."`  

# 2. **–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä**  
#    - –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å `Calculator` —Å –º–µ—Ç–æ–¥–∞–º–∏ `add`, `subtract`, `multiply`, `divide`.  
#    - –ö–∞–∂–¥—ã–π –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –¥–≤–∞ —á–∏—Å–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏.  

# 3. **–ö–Ω–∏–≥–∞**  
#    - –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å `Book` —Å –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏ `title`, `author` –∏ `year`.  
#    - –î–æ–±–∞–≤—å –º–µ—Ç–æ–¥ `get_info()`, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É: `"[title] –Ω–∞–ø–∏—Å–∞–Ω(–∞) [author] –≤ [year] –≥–æ–¥—É."`  

# ---  

# ### **2. –ó–∞–¥–∞–Ω–∏—è —Å—Ä–µ–¥–Ω–µ–≥–æ —É—Ä–æ–≤–Ω—è**  
# 4. **–ë–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç**  
#    - –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å `BankAccount` —Å –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏ `owner` (–≤–ª–∞–¥–µ–ª–µ—Ü) –∏ `balance` (–±–∞–ª–∞–Ω—Å).  
#    - –î–æ–±–∞–≤—å –º–µ—Ç–æ–¥—ã:  
#      - `deposit(amount)` ‚Äì –ø–æ–ø–æ–ª–Ω—è–µ—Ç –±–∞–ª–∞–Ω—Å.  
#      - `withdraw(amount)` ‚Äì —Å–Ω–∏–º–∞–µ—Ç –¥–µ–Ω—å–≥–∏ (–µ—Å–ª–∏ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤).  
#      - `check_balance()` ‚Äì –≤—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å.  

  

# 6. **–°—Ç—É–¥–µ–Ω—Ç—ã –∏ –≥—Ä—É–ø–ø–∞**  
#    - –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å `Student` —Å –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏ `name` –∏ `grades` (—Å–ø–∏—Å–æ–∫ –æ—Ü–µ–Ω–æ–∫).  
#    - –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å `Group`, –∫–æ—Ç–æ—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç —Å–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.  
#    - –î–æ–±–∞–≤—å –º–µ—Ç–æ–¥—ã:  
#      - `add_student(student)` ‚Äì –¥–æ–±–∞–≤–ª—è–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ –≥—Ä—É–ø–ø—É.  
#      - `remove_student(student)` ‚Äì —É–¥–∞–ª—è–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞.  
#      - `get_average_grade()` ‚Äì —Å—á–∏—Ç–∞–µ—Ç —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –≥—Ä—É–ø–ø—ã.  

# ---  

# ### **3. –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∑–∞–¥–∞–Ω–∏—è**  
# 7. **–§–∏–≥—É—Ä—ã (–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ)**  
#    - –°–æ–∑–¥–∞–π –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å `Shape` —Å –º–µ—Ç–æ–¥–æ–º `area()` (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0).  
#    - –°–æ–∑–¥–∞–π –ø–æ–¥–∫–ª–∞—Å—Å—ã `Circle`, `Rectangle`, `Triangle`, –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—é—â–∏–µ `area()`.  

# 8. **–ú–∞–≥–∞–∑–∏–Ω –∏ —Ç–æ–≤–∞—Ä—ã**  
#    - –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å `Product` —Å –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏ `name`, `price`, `quantity`.  
#    - –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å `Store`, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å/—É–¥–∞–ª—è—Ç—å —Ç–æ–≤–∞—Ä—ã –∏ —Å—á–∏—Ç–∞—Ç—å –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å.  

# 9. **–ò–≥—Ä–∞ "–ó–º–µ–π–∫–∞" (–û–û–ü –ø–æ–¥—Ö–æ–¥)**  
#    - –°–æ–∑–¥–∞–π –∫–ª–∞—Å—Å—ã `Snake`, `Food`, `Game`.  
#    - –ó–º–µ–π–∫–∞ –¥–æ–ª–∂–Ω–∞ –¥–≤–∏–≥–∞—Ç—å—Å—è, –µ—Å—Ç—å –µ–¥—É –∏ —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å—Å—è.  

# ---  

# **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–¥–µ–∏:**  
# - –†–µ–∞–ª–∏–∑—É–π –∫–ª–∞—Å—Å `ToDoList` –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏.  
# - –°–æ–∑–¥–∞–π —Å–∏—Å—Ç–µ–º—É –∫–ª–∞—Å—Å–æ–≤ –¥–ª—è –∏–≥—Ä—ã –≤ "–ö–∫–∏-–Ω–æ–ª–∏–∫–∏".  
# - –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å—Å `Fraction` –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥—Ä–æ–±—è–º–∏ (—Å–ª–æ–∂–µ–Ω–∏–µ, –≤—ã—á–∏—Ç–∞–Ω–∏–µ –∏ —Ç. –¥.).  

# –ö–∞–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ —Ç–µ–±–µ –±–æ–ª—å—à–µ –Ω—Ä–∞–≤–∏—Ç—Å—è? –ú–æ–≥—É –ø–æ–º–æ—á—å —Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π! üöÄ

# class Car:
#     def __init__(self, brand: str, model: str, year: int, probeg: float):
#         self.brand =brand
#         self.model =model
#         self.year =year
#         self.probeg =probeg

#     def drive(self, distance: float):
#         if distance <= 0:
#             print("–û—à–∏–±–∫–∞")
        
#         else:
#             self.probeg += distance
#             print(f"–ü—Ä–æ–π–¥–µ–Ω–æ –Ω—ã–Ω–µ—à–Ω–∏–º –≤–ª–∞–¥–µ–ª—å—Ü–µ–º {distance} –∫–º. –û–±—â–∏–π –ø—Ä–æ–±–µ–≥: {self.probeg} –∫–º")
#     def display_info(self):
#         info = f'–ú–∞—Ä–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è - {self.brand} –ú–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è - {self.model} –ì–æ–¥ –≤—ã–ø—É—Å–∫–∞ - {self.year} –ü—Ä–æ–±–µ–≥ - {self.probeg} –∫–º'
#         print(info)
#         return info

# car = Car("Toyota", "Camry 3.5", 2012, 2000)
# car.drive(3000)
# car.display_info()






class Student:
    def __init__(self, name: str):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å –∏–º–µ–Ω–µ–º –∏ –ø—É—Å—Ç—ã–º —Å–ø–∏—Å–∫–æ–º –æ—Ü–µ–Ω–æ–∫"""
        self.name = name
        self.grades = []  # –ë—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –æ—Ü–µ–Ω–∫–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞
    
    def add_grade(self, grade: int) -> None:
        """–î–æ–±–∞–≤–ª—è–µ—Ç –æ—Ü–µ–Ω–∫—É (–æ—Ç 2 –¥–æ 5)"""
        if 2 <= grade <= 5:
            self.grades.append(grade)
        else:
            print(f"–û—à–∏–±–∫–∞: –æ—Ü–µ–Ω–∫–∞ {grade} –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–∞ (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 2 –¥–æ 5)")
    
    def get_average(self) -> float:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª —Å—Ç—É–¥–µ–Ω—Ç–∞"""
        if not self.grades:
            return 0.0
        return sum(self.grades) / len(self.grades)


class Group:
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä—É–ø–ø—ã —Å –ø—É—Å—Ç—ã–º —Å–ø–∏—Å–∫–æ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤"""
        self.students = []
    
    def add_student(self, student: Student) -> None:
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ –≥—Ä—É–ø–ø—É"""
        self.students.append(student)
        print(f"–°—Ç—É–¥–µ–Ω—Ç {student.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É")
    
    def remove_student(self, student: Student) -> None:
        """–£–¥–∞–ª—è–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ –≥—Ä—É–ø–ø—ã"""
        if student in self.students:
            self.students.remove(student)
            print(f"–°—Ç—É–¥–µ–Ω—Ç {student.name} —É–¥–∞–ª—ë–Ω –∏–∑ –≥—Ä—É–ø–ø—ã")
        else:
            print(f"–°—Ç—É–¥–µ–Ω—Ç {student.name} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≥—Ä—É–ø–ø–µ")
    
    def get_group_average(self) -> float:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –≤—Å–µ–π –≥—Ä—É–ø–ø—ã"""
        if not self.students:
            print("–í –≥—Ä—É–ø–ø–µ –Ω–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤!")
            return 0.0
        
        total = sum(student.get_average() for student in self.students)
        return total / len(self.students)


# –°–æ–∑–¥–∞—ë–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
student1 = Student("–õ–µ—Ö–∞")
student1.add_grade(5)
student1.add_grade(4)
student1.add_grade(2)

student2 = Student("–î–∏–º–æ–Ω")
student2.add_grade(5)
student2.add_grade(3)
student2.add_grade(4)

student3 = Student("–ì–µ–Ω–∞")
student3.add_grade(5)
student3.add_grade(3)
student3.add_grade(2)

student4 = Student("–ò–≥–æ—Ä—å")
student4.add_grade(3)
student4.add_grade(3)
student4.add_grade(3)

student5 = Student("–¢–æ–ª–∏–∫")
student5.add_grade(2)
student5.add_grade(2)
student5.add_grade(2)

student6 = Student("–í–∞–Ω–µ–∫")
student6.add_grade(4)
student6.add_grade(4)
student6.add_grade(4)

# –°–æ–∑–¥–∞—ë–º –≥—Ä—É–ø–ø—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
group = Group()
group.add_student(student1)
group.add_student(student2)
group.add_student(student3)
group.add_student(student4)
group.add_student(student5)
group.add_student(student6)

# –í—ã–≤–æ–¥–∏–º —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –≥—Ä—É–ø–ø—ã
print(f'–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –≥—Ä—É–ø–ø—ã: {group.get_group_average():.2f}')

